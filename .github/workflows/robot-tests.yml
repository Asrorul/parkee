name: Robot Framework Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      location_id:
        description: 'Location ID'
        required: true
        default: '06R'
        type: string
      parking_slip:
        description: 'Parking slip number'
        required: true
        default: '06R4OL0DACB0'
        type: string

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Firefox and geckodriver
      run: |
        sudo apt-get update
        sudo apt-get install -y firefox
        wget https://github.com/mozilla/geckodriver/releases/download/v0.33.0/geckodriver-v0.33.0-linux64.tar.gz
        tar -xzf geckodriver-v0.33.0-linux64.tar.gz
        sudo mv geckodriver /usr/local/bin/
        rm geckodriver-v0.33.0-linux64.tar.gz

    - name: Set test parameters
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "Using provided parameters"
          echo "LOCATION_ID=${{ github.event.inputs.location_id }}" >> $GITHUB_ENV
          echo "PARKING_SLIP=${{ github.event.inputs.parking_slip }}" >> $GITHUB_ENV
        else
          echo "Using default parameters"
          echo "LOCATION_ID=06R" >> $GITHUB_ENV
          echo "PARKING_SLIP=06R4OL0DACB0" >> $GITHUB_ENV
        fi

    - name: Run Robot Framework Tests
      run: |
        robot \
          --variable HEADLESS:True \
          --variable LOCATION_ID:${{ env.LOCATION_ID }} \
          --variable PARKING_SLIP:${{ env.PARKING_SLIP }} \
          TestCases/receipt.robot

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: robot-test-results
        path: |
          log.html
          report.html
          output.xml
          *.png
